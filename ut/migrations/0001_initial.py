# Generated by Django 3.1.2 on 2021-04-07 02:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Attribute', models.CharField(max_length=50)),
                ('Formula', models.TextField(blank=True, null=True)),
                ('ReadOnly', models.BooleanField(default=False)),
                ('Filtered', models.BooleanField(default=True)),
                ('UniqueAtt', models.BooleanField(default=False)),
                ('NotNullAtt', models.BooleanField(default=False)),
                ('ShowInTable', models.BooleanField(default=True)),
                ('ExternalTable', models.CharField(blank=True, max_length=50, null=True)),
                ('ExternalUq', models.CharField(blank=True, max_length=50, null=True)),
                ('ExternalField', models.CharField(blank=True, max_length=50, null=True)),
                ('ValuesList', models.TextField(blank=True, null=True)),
                ('UseExternalTables', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.CharField(max_length=50, unique=True)),
                ('Template', models.TextField(blank=True, null=True)),
                ('UseAutoCounter', models.BooleanField(blank=True, default=False)),
                ('Prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('CounterStrLen', models.IntegerField(default=10)),
                ('Class_query', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TemplateName', models.CharField(max_length=100, unique=True)),
                ('ToTemplate', models.CharField(blank=True, max_length=255, null=True)),
                ('CcTemplate', models.CharField(blank=True, max_length=255, null=True)),
                ('SubjectTemplate', models.CharField(blank=True, max_length=255, null=True)),
                ('Template', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InputTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Inputtype', models.CharField(max_length=50, unique=True)),
                ('HtmlLine', models.TextField(null=True)),
                ('Description', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'InputTypes',
            },
        ),
        migrations.CreateModel(
            name='Instances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20)),
                ('Updated', models.DateTimeField(auto_now_add=True)),
                ('Created', models.DateTimeField(auto_now_add=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.classes')),
                ('Owner', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('Updatedby', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instances',
                'unique_together': {('Class', 'Code')},
            },
        ),
        migrations.CreateModel(
            name='SendOuts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Query', models.TextField(blank=True, null=True)),
                ('EmailField', models.CharField(max_length=50)),
                ('EmailGroupFields', models.TextField(blank=True, null=True)),
                ('EmailTemplate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ut.emailtemplates')),
            ],
            options={
                'verbose_name': 'SendOuts',
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Report', models.CharField(max_length=100, unique=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('Query', models.TextField(blank=True, null=True)),
                ('ViewGroups', models.ManyToManyField(blank=True, related_name='_reports_ViewGroups_+', to='auth.Group')),
            ],
            options={
                'verbose_name': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Project', models.CharField(max_length=100, unique=True)),
                ('Description', models.TextField(blank=True, null=True)),
                ('Classes_m2m', models.ManyToManyField(blank=True, to='ut.Classes')),
                ('DefaultReport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='ut.reports')),
                ('Reports_m2m', models.ManyToManyField(blank=True, to='ut.Reports')),
                ('UpdateGroups', models.ManyToManyField(related_name='_projects_UpdateGroups_+', to='auth.Group')),
                ('ViewGroups', models.ManyToManyField(related_name='_projects_ViewGroups_+', to='auth.Group')),
            ],
            options={
                'verbose_name': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Layouts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FormLayout', models.TextField(blank=True, null=True)),
                ('TableLayout', models.TextField(blank=True, null=True)),
                ('ShortLayout', models.TextField(blank=True, null=True)),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.classes')),
            ],
        ),
        migrations.CreateModel(
            name='FormLayouts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Row', models.IntegerField(default=0)),
                ('Column', models.IntegerField(default=0)),
                ('Attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.attributes')),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.classes')),
            ],
        ),
        migrations.CreateModel(
            name='DataTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DataType', models.CharField(max_length=50, unique=True)),
                ('FieldName', models.CharField(blank=True, max_length=100, null=True)),
                ('InputTypes', models.ManyToManyField(blank=True, related_name='_datatypes_InputTypes_+', to='ut.InputTypes')),
            ],
            options={
                'verbose_name': 'DataTypes',
            },
        ),
        migrations.CreateModel(
            name='Counters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CurrentCounter', models.IntegerField(default=0)),
                ('Class', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ut.classes')),
            ],
        ),
        migrations.AddField(
            model_name='classes',
            name='DefaultEmailTemplate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ut.emailtemplates'),
        ),
        migrations.AddField(
            model_name='classes',
            name='DeleteGroups',
            field=models.ManyToManyField(blank=True, related_name='_classes_DeleteGroups_+', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='classes',
            name='InsertGroups',
            field=models.ManyToManyField(blank=True, related_name='_classes_InsertGroups_+', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='classes',
            name='Master',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.classes'),
        ),
        migrations.AddField(
            model_name='classes',
            name='RightsFilteredByClass',
            field=models.ManyToManyField(blank=True, related_name='_classes_RightsFilteredByClass_+', to='ut.Classes'),
        ),
        migrations.AddField(
            model_name='classes',
            name='UpdateGroups',
            field=models.ManyToManyField(blank=True, related_name='_classes_UpdateGroups_+', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='classes',
            name='ViewGroups',
            field=models.ManyToManyField(blank=True, related_name='_classes_ViewGroups_+', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='Class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ut.classes'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='DataType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.datatypes'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='InputType',
            field=models.ForeignKey(default=-1, on_delete=django.db.models.deletion.PROTECT, to='ut.inputtypes'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='InternalAttribute',
            field=models.ForeignKey(default=-1, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ut.attributes'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='Ref_Attribute',
            field=models.ForeignKey(default=-1, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ut.attributes'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='Ref_Class',
            field=models.ForeignKey(default=-1, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ut.classes'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='UpdateGroups',
            field=models.ManyToManyField(related_name='_attributes_UpdateGroups_+', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='attributes',
            name='ViewGroups',
            field=models.ManyToManyField(related_name='_attributes_ViewGroups_+', to='auth.Group'),
        ),
        migrations.CreateModel(
            name='Values_m2m',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.attributes')),
                ('Instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ut.instances')),
                ('instance_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ut.instances')),
            ],
            options={
                'verbose_name': 'Values_m2m',
                'unique_together': {('Instance_id', 'Attribute_id', 'instance_value_id')},
            },
        ),
        migrations.CreateModel(
            name='Values',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('int_value', models.IntegerField(null=True)),
                ('char_value', models.CharField(max_length=255, null=True)),
                ('text_value', models.TextField(null=True)),
                ('float_value', models.FloatField(null=True)),
                ('datetime_value', models.DateTimeField(null=True)),
                ('Attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ut.attributes')),
                ('Instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ut.instances')),
                ('instance_value', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='ut.instances')),
            ],
            options={
                'verbose_name': 'Values',
                'unique_together': {('Instance', 'Attribute')},
            },
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Filter', models.CharField(max_length=50)),
                ('FilterType', models.IntegerField(choices=[(1, 'Exact'), (2, 'Min and Max'), (3, 'Contains'), (4, 'SQL Style LIKE')], default=1)),
                ('Size', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (6, 6), (12, 12)], default=1)),
                ('Condition1', models.CharField(blank=True, choices=[('OR', 'OR'), ('AND', 'AND')], default='OR', max_length=50, null=True)),
                ('Condition2', models.CharField(blank=True, choices=[('OR', 'OR'), ('AND', 'AND')], default='OR', max_length=50, null=True)),
                ('Formula', models.TextField(blank=True, null=True)),
                ('Attribute1', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ut.attributes')),
                ('Attribute2', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ut.attributes')),
                ('Attribute3', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ut.attributes')),
                ('Class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ut.classes')),
                ('UpdateGroups', models.ManyToManyField(related_name='_filters_UpdateGroups_+', to='auth.Group')),
                ('ViewGroups', models.ManyToManyField(related_name='_filters_ViewGroups_+', to='auth.Group')),
            ],
            options={
                'unique_together': {('Class', 'Filter')},
            },
        ),
    ]
